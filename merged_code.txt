-- Start of file: login.html --
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Modern Login</title>
    <link rel="stylesheet" href="styles.css">
    <style>
        /* Additional styles for Sign Up and Forgot Password */
        .form-group {
            margin-bottom: 15px;
            color: #fff;
            text-align: left;
        }

        .form-group label {
            display: block;
            margin-bottom: 5px;
        }

        .form-group input,
        .form-group select {
            width: 100%;
            padding: 8px;
            border: 1px solid #fff;
            border-radius: 5px;
            background-color: transparent;
            color: #000;
        }

        .signup-links {
            margin-top: 20px;
        }

        .signup-links a {
            color: #fff;
            text-decoration: none;
            margin: 0 10px;
            font-size: 14px;
        }

        .signup-links a:hover {
            text-decoration: underline;
        }
    </style>
</head>

<body>
    <div class="container">
        <div class="glass-card">
            <div id="login-form">
                <h2>Login</h2>
                <form id="loginForm">
                    <div class="input-group">
                        <input type="text" id="username" required>
                        <label for="username">Username</label>
                    </div>
                    <div class="input-group">
                        <input type="password" id="password" required>
                        <label for="password">Password</label>
                    </div>
                    <button type="submit">Login</button>
                    <div class="links">
                        <a href="#" id="forgot-password-link">Forgot Password?</a>
                        <a href="#" id="signup-link">Sign Up</a>
                    </div>
                    <div id="message" style="color: white; margin-top: 10px;"></div>
                </form>
            </div>

            <div id="signup-form" style="display: none;">
                <h2>Sign Up</h2>
                <form id="signupForm">
                    <div class="form-group">
                        <label for="signup-username">Username</label>
                        <input type="text" id="signup-username" name="signup-username" required>
                    </div>
                    <div class="form-group">
                        <label for="signup-password">Password</label>
                        <input type="password" id="signup-password" name="signup-password" required>
                    </div>
                    <div class="form-group">
                        <label for="signup-role">Role</label>
                        <select id="signup-role" name="signup-role">
                            <option value="admin">Admin</option>
                            <option value="regulator">Regulator</option>
                            <option value="enduser">End User</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="signup-gender">Gender</label>
                        <select id="signup-gender" name="signup-gender">
                            <option value="male">Male</option>
                            <option value="female">Female</option>
                            <option value="other">Other</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="signup-dob">Date of Birth</label>
                        <input type="date" id="signup-dob" name="signup-dob" required>
                    </div>
                    <button type="submit">Sign Up</button>
                    <div class="signup-links">
                        <a href="#" id="back-to-login">Back to Login</a>
                    </div>
                    <div id="signup-message" style="color: white; margin-top: 10px;"></div>
                </form>
            </div>

            <div id="forgot-password-form" style="display: none;">
                <h2>Forgot Password</h2>
                <form id="forgotPasswordForm">
                    <div class="form-group">
                        <label for="forgot-password-username">Username or Email</label>
                        <input type="text" id="forgot-password-username" name="forgot-password-username" required>
                    </div>
                    <button type="submit">Reset Password</button>
                    <div class="signup-links">
                        <a href="#" id="back-to-login-from-forgot">Back to Login</a>
                    </div>
                    <div id="forgot-password-message" style="color: white; margin-top: 10px;"></div>
                </form>
            </div>
        </div>
    </div>

    <script>
        const loginForm = document.getElementById('loginForm');
        const message = document.getElementById('message');
        const signupForm = document.getElementById('signupForm');
        const signupMessage = document.getElementById('signup-message');
        const forgotPasswordForm = document.getElementById('forgotPasswordForm');
        const forgotPasswordMessage = document.getElementById('forgot-password-message');

        //  Show/Hide Forms
        document.getElementById('signup-link').addEventListener('click', () => {
            document.getElementById('login-form').style.display = 'none';
            document.getElementById('signup-form').style.display = 'block';
            document.getElementById('forgot-password-form').style.display = 'none';

        });

        document.getElementById('back-to-login').addEventListener('click', () => {
            document.getElementById('login-form').style.display = 'block';
            document.getElementById('signup-form').style.display = 'none';
            document.getElementById('forgot-password-form').style.display = 'none';
        });

        document.getElementById('forgot-password-link').addEventListener('click', () => {
            document.getElementById('login-form').style.display = 'none';
            document.getElementById('signup-form').style.display = 'none';
            document.getElementById('forgot-password-form').style.display = 'block';
        });

        document.getElementById('back-to-login-from-forgot').addEventListener('click', () => {
            document.getElementById('login-form').style.display = 'block';
            document.getElementById('signup-form').style.display = 'none';
            document.getElementById('forgot-password-form').style.display = 'none';
        });

        // Login Form Submission
        loginForm.addEventListener('submit', async (e) => {
            e.preventDefault();
            const username = document.getElementById('username').value;
            const password = document.getElementById('password').value;

            try {
                const response = await fetch('http://127.0.0.1:5000/login', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        username,
                        password
                    }),
                });

                const result = await response.json();
                if (response.ok) {
                    message.textContent = result.message;
                    message.style.color = 'green';
                } else {
                    message.textContent = result.message || 'Login failed.';
                    message.style.color = 'red';
                }
            } catch (error) {
                message.textContent = 'An error occurred. Please try again.';
                message.style.color = 'red';
            } finally {
                loginForm.reset(); // Clear the form for the next login
            }
        });

        // Sign Up Form Submission
        signupForm.addEventListener('submit', async (e) => {
            e.preventDefault();
            const username = document.getElementById('signup-username').value;
            const password = document.getElementById('signup-password').value;
            const role = document.getElementById('signup-role').value;
            const gender = document.getElementById('signup-gender').value;
            const dob = document.getElementById('signup-dob').value;

            try {
                const response = await fetch('http://127.0.0.1:5000/signup', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        username,
                        password,
                        role,
                        gender,
                        dob
                    }),
                });

                const result = await response.json();
                if (response.ok) {
                    signupMessage.textContent = result.message;
                    signupMessage.style.color = 'green';
                    signupForm.reset();
                    // Optionally switch back to login form here
                    document.getElementById('login-form').style.display = 'block';
                    document.getElementById('signup-form').style.display = 'none';
                } else {
                    signupMessage.textContent = result.message || 'Signup failed.';
                    signupMessage.style.color = 'red';
                }
            } catch (error) {
                signupMessage.textContent = 'An error occurred. Please try again.';
                signupMessage.style.color = 'red';
            }
        });

        // Forgot Password Form Submission
        forgotPasswordForm.addEventListener('submit', async (e) => {
            e.preventDefault();
            const usernameOrEmail = document.getElementById('forgot-password-username').value;

            try {
                const response = await fetch('http://127.0.0.1:5000/forgot-password', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        usernameOrEmail
                    }),
                });

                const result = await response.json();
                if (response.ok) {
                    forgotPasswordMessage.textContent = result.message;
                    forgotPasswordMessage.style.color = 'green';
                } else {
                    forgotPasswordMessage.textContent = result.message || 'Password reset failed.';
                    forgotPasswordMessage.style.color = 'red';
                }
            } catch (error) {
                forgotPasswordMessage.textContent = 'An error occurred. Please try again.';
                forgotPasswordMessage.style.color = 'red';
            }
        });
    </script>
</body>

</html>
-- End of file: login.html --

-- Start of file: styles.css --
body {
    margin: 0;
    padding: 0;
    font-family: sans-serif;
    background: linear-gradient(to right, #2980b9, #6dd5ed); /* Example gradient background */
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
}

.container {
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.glass-card {
    background: rgba(255, 255, 255, 0.2);
    border-radius: 10px;
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.3);
    box-shadow: 0 8px 32px 0 rgba(0, 0, 0, 0.37);
    padding: 40px;
    width: 400px;
    text-align: center;
}

.glass-card h2 {
    color: #fff;
    margin-bottom: 30px;
}

.input-group {
    position: relative;
    margin-bottom: 30px;
}

.input-group input {
    width: 100%;
    padding: 10px 0;
    font-size: 16px;
    color: #fff;
    margin-bottom: 10px;
    border: none;
    border-bottom: 1px solid #fff;
    outline: none;
    background: transparent;
}

.input-group label {
    position: absolute;
    top: 0;
    left: 0;
    color: #fff;
    pointer-events: none;
    transition: 0.3s ease-in-out;
}

.input-group input:focus + label,
.input-group input:valid + label,
.input-group label.active {
    transform: translateY(-20px);
    font-size: 12px;
    color: #eee;
}

button {
    width: 100%;
    padding: 10px 20px;
    border: none;
    border-radius: 5px;
    background-color: #fff;
    color: #333;
    font-size: 16px;
    cursor: pointer;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    transition: background-color 0.3s ease;
}

button:hover {
    background-color: #eee;
}

.links {
    margin-top: 20px;
}

.links a {
    color: #fff;
    text-decoration: none;
    margin: 0 10px;
    font-size: 14px;
}

.links a:hover {
    text-decoration: underline;
}
-- End of file: styles.css --

-- Start of file: validation.py --
from flask import Flask, request, jsonify, send_from_directory
import re
import os
from flask_cors import CORS
import logging
import mysql.connector  # Import the MySQL connector
from datetime import datetime

logging.basicConfig(level=logging.DEBUG)

app = Flask(__name__)
CORS(app)

# Database Configuration (Replace with your XAMPP MySQL credentials)
db_config = {
    'user': 'rrot',
    'password': '',
    'host': 'localhost',  # Or 'localhost'
    'database': 'my_app_db'
}


def log_request_info():
    logging.debug(f"Headers: {request.headers}")
    logging.debug(f"Body: {request.get_data()}")


def connect_to_db():
    try:
        conn = mysql.connector.connect(**db_config)
        return conn, conn.cursor()
    except mysql.connector.Error as err:
        logging.error(f"Database connection error: {err}")
        return None, None


def close_db_connection(conn, cursor):
    if cursor:
        cursor.close()
    if conn:
        conn.close()


def is_valid_username(username):
    if not username:
        return False, "Username cannot be empty."
    if len(username) < 3:
        return False, "Username must be at least 3 characters long."
    if len(username) > 20:
        return False, "Username cannot be longer than 20 characters."
    if not re.match(r'^[a-zA-Z0-9_]+$', username):
        return False, "Username can only contain alphanumeric characters and underscores."
    return True, None


def is_valid_password(password):
    if not password:
        return False, "Password cannot be empty."
    if len(password) < 8:
        return False, "Password must be at least 8 characters long."
    if not re.search(r'[a-z]', password):
        return False, "Password must contain at least one lowercase letter."
    if not re.search(r'[A-Z]', password):
        return False, "Password must contain at least one uppercase letter."
    if not re.search(r'[0-9]', password):
        return False, "Password must contain at least one digit."
    if not re.search(r'[!@#$%^&*(),.?":{}|<>]', password):
        return False, "Password must contain at least one special character."
    return True, None


@app.route('/')
def serve_login_page():
    return send_from_directory('.', 'login.html')


@app.route('/<path:filename>')
def serve_static_files(filename):
    return send_from_directory('.', filename)


@app.route('/login', methods=['POST'])
def login():
    data = request.get_json()
    username = data.get('username')
    password = data.get('password')

    username_valid, username_error = is_valid_username(username)
    password_valid, password_error = is_valid_password(password)

    if username_valid and password_valid:
        conn, cursor = connect_to_db()
        if not conn:
            return jsonify({'success': False, 'message': 'Database connection failed.'}), 500

        try:
            cursor.execute("SELECT * FROM users WHERE username = %s", (username,))
            user = cursor.fetchone()

            if user and user[2] == password:  # Assuming password is the 3rd column
                return jsonify({'success': True, 'message': 'Login successful!'}), 200
            else:
                return jsonify({'success': False, 'message': 'Invalid username or password.'}), 401

        except mysql.connector.Error as err:
            logging.error(f"Database query error: {err}")
            return jsonify({'success': False, 'message': 'Database error during login.'}), 500

        finally:
            close_db_connection(conn, cursor)

    else:
        errors = {}
        if username_error:
            errors['username'] = username_error
        if password_error:
            errors['password'] = password_error
        return jsonify({'success': False, 'errors': errors, 'message': 'Validation failed.'}), 400
    

@app.route('/signup', methods=['POST'])
def signup():
    data = request.get_json()
    username = data.get('username')
    password = data.get('password')
    role = data.get('role')
    gender = data.get('gender')
    dob_str = data.get('dob')  # Get DOB as string

    username_valid, username
-- End of file: validation.py --

